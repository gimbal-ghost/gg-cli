name: Release

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: Release Type
        type: choice
        required: true
        default: 'official',
        options:
        - official
        - alpha
        - beta
        - rc
      draft:
        description: Draft
        type: boolean
        required: true
        default: true

jobs:
  windows-release:
    name: Windows Release
    runs-on: windows-2022
    # Ensure release is only run on main
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          # Grab all the git history for building changelog
          fetch-depth: 0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.1.1
        with:
          node-version: 16.14.x
          cache: npm

      - name: NPM Install
        run: npm install

      - name: Update Official Version
        if: ${{ github.events.inputs.releaseType == 'official' }}
        run: npm run version

      - name: Update Prerelease Version
        if: ${{ github.events.inputs.releaseType != 'official' }}
        run: npm run version -- --prerelease ${{ github.events.inputs.releaseType }}

      - name: Get Version
        id: get-version
        run: echo "::set-output name=version::$(node --print "'v'.concat(require('./package.json').version)")"

      - name: Commit Version
        id: commit-version
        uses: EndBug/add-and-commit@v9
        with:
          message: ${{ format('release {0}', steps.get-version.outputs.version) }}
          pathspec_error_handling: exitImmediately
          tag: ${{ steps.get-version.outputs.version }}

      - name: Exit on Commit, Push, Tag, Tag Push Failure
        if: ${{ steps.commit-version.outputs.committed != 'true' || steps.commit-version.outputs.pushed != 'true' || steps.commit-version.outputs.tagged != 'true' || steps.commit-version.outputs.tag_pushed != 'true'}}
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Commit failed')

      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run build

      - name: Create Release
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "releases/*.exe, releases/*.exe.blockmap, releases/latest.yml"
          bodyFile: "RELEASE-NOTES.md"
          draft: ${{ github.event.inputs.draft }}
          name: ${{ steps.get-version.outputs.version }}
          prerelease: ${{ github.events.inputs.releaseType != 'official' }}
          tag: ${{ steps.get-version.outputs.version }}